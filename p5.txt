Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
    La captura está compuesta por 954 paquetes

* ¿Cuánto tiempo dura la captura?
    Tiene una duración total de 56149345 segundos

* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
    La captura se ha efectuado en la IP 192.168.1.34 y se trata de una
    IP privada ya que el rango 192.168.0.0 corresponde a una IP privada.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
    UDP tiene un porcentaje de tráfico mayor con un 96,23%.
    Tiene sentido ya que si estamos transmitiendo en tiempo real, normalmente utilizaremos UDP

* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
    Podemos ver: IP, ARP, TCP, ICMP, RTP, SIP, HTP, STTP, STUN

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os? 7, 14, 16, 38-89, 54

* Y los paquetes con RTP, ¿cuándo se envı́an? Desde el segundo 16 al 38
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
    Utiliza DNS

* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga? 80.58.61.250

* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo? http//ekiga.net/ip

* ¿Qué user agent (UA) la está pidiendo? 192.166.1.34
* ¿Qué devuelve el servidor? 200 OK

* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor? Devuelve la IP con la que nos reconoce Ekiga

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo? Para saber que tipo de NAT se está utilizando

* ¿Podrı́as decir si estamos tras un NAT o no? Si

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar? No podemos saberlo con seguridad, pues podría tratarse de un proxy

* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP? 5060

* ¿Qué método SIP utiliza el UA para registrarse? REGISTER
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA? INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento? No, porque se recibe un 401 Unauthorized

* ¿Cómo sabemos si el registro se ha realizado correctamente o no? Recibimos 200 OK

* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio) Debido al nº de autorización, el tamaño es menor

* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades. 3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP? Sí, puede verse en el "Header" del mensaje

* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está? Contiene información de la sesión SIP. Está en formato SDP

* ¿Tiene éxito el primer intento? ¿Cómo lo sabes? No tiene éxito ya que no recibe un 200 OK.

* ¿En qué se diferencia el segundo INVITE más abajo del primero? 
  ¿A qué crees que se debe esto? Tiene una longitud mayor debido a que lo envía con el código de autorización

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos? RTP y H.261. RTP se usa para intercambio de datos a tiempo real
   y H.261 es un estándar de compresión de video

* ¿Cuál es el tamaño de paquete de los mismos? RTP tiene un tamaño 214 bytes. H.261 tiene un tamaño variable, se envían de dos en dos,
    las dos primeras parejas tienen más de 1000 bytes cada uno, para el resto de paquetes, el primmero  tendrá más de 1000 bytes y el 
    segundo oscilará entre los 200 y los 800 bytes.

* ¿Se utilizan bits de padding? No

* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)? Cada  160 ms

* ¿Cuántos bits/segundo se envı́an? 
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué? Hay 611 de RTP  y 196 H.261

* ¿Cuántos paquetes se pierden? No se pierde ningún paquete

* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta? El valor máximo es de 1290.479. Delta es la diferencia de tiempo de empaquetado entre el paquete actual y el anterior, 
  y max delta es el valor máximo que toma la delta

* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad? Valor medio de jitter = 153.240 y Valor máximo de jitter = 183.096. El jitter indica la latencia máxima y la latencia media de la comunicación.
Dados esos valores, estaríamos ante una conversación de calidad

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado? Ambos tienen un valor de 0 ms

* ¿Podemos saber si éste es el primer paquete que nos han enviado? Sí, ya que el marker está a True

* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál? El 246.

* ¿A qué se debe el cambio tan brusco del jitter? Hubo una descarga

* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande? Sí, puesto que cuanto más varíe el delta más varía el jitter. 
Es mayor el delta puesto que el retardo respecto al paquete anterior es mayor

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación? 20'9 segundos
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs? 0xbf4afd37 y 0x43406582. Hay varios porque hay dos flujos diferentes.
  No hay CRCs

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza? BYE
* ¿En qué trama(s)? 924, 925, 927, 933
* ¿Por qué crees que se envı́a varias veces? Por seguridad, ya que utilizamos protocoLo UDP

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER? Porque para cerrar sesión se envía un REGISTER con la cabecera Expires a 0.
* ¿En qué trama sucede esto? 950
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)? En la cabecera EXPIRES
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

